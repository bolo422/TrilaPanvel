package br.com.panvel.gerenciador.servlet;

import java.io.IOException;

import br.com.panvel.gerenciador.servlet.actions.ChangeOrder;
import br.com.panvel.gerenciador.servlet.actions.CompanyEditor;
import br.com.panvel.gerenciador.servlet.actions.EditCompany;
import br.com.panvel.gerenciador.servlet.actions.IAction;
import br.com.panvel.gerenciador.servlet.actions.ListCompanies;
import br.com.panvel.gerenciador.servlet.actions.NewCompany;
import br.com.panvel.gerenciador.servlet.actions.NewCompanyForm;
import br.com.panvel.gerenciador.servlet.actions.RemoveCompany;
import br.com.panvel.gerenciador.servlet.actions.UpdateIndex;
import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@WebServlet(urlPatterns="/entry")
public class EntryServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		IAction action = null;
		///aluraGerenciador.src.main.java.br.com.panvel.gerenciador.servlet.actions.
		
		Class param = Class.forName(request.getParameter("action"));
		action = c
		
		switch(request.getParameter("action"))
		{
			case "ChangeOrder": action = new ChangeOrder(); break;
			case "CompanyEditor": action = new CompanyEditor(); break;
			case "EditCompany": action = new EditCompany(); break;
			case "ListCompanies": action = new ListCompanies(); break;
			case "NewCompany": action = new NewCompany(); break;
			case "RemoveCompany": action = new RemoveCompany(); break;
			case "UpdateIndex": action = new UpdateIndex(); break;
			case "NewCompanyForm": action = new NewCompanyForm(); break;
		}
		
		try{
			
			String[] act = action.execute(request, response).split(":");
			switch(act[0])
			{
			case "forward": RequestDispatcher rd = request.getRequestDispatcher("WEB-INF/view/" + act[1]);
				rd.forward(request, response);
				break;
			case "redirect": response.sendRedirect(act[1]);
				break;
			}
			
			
		}catch(NullPointerException e){
			throw new NullPointerException(" ->> Parâmetro inválido { " + e.getMessage() + " } <<-");
		}
		
		
	}

}
